android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.ab:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.ac:
    android.app.Notification$Builder getBuilder() -> a
android.support.v4.app.NotificationCompat -> android.support.v4.app.ad:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> b
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> b
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> a
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.ae:
    android.os.Bundle mExtras -> e
    android.support.v4.app.RemoteInput[] mRemoteInputs -> f
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> d
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> e
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.af:
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.ag:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.ah:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ai:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.lang.String mGroupKey -> q
    boolean mGroupSummary -> r
    java.lang.String mSortKey -> s
    java.util.ArrayList mActions -> t
    boolean mLocalOnly -> u
    android.os.Bundle mExtras -> v
    android.app.Notification mNotification -> w
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> a
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> a
    void setFlag(int,boolean) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.aj:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.ak:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.al:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.am:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.an:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.ao:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.ap:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.aq:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.ar:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.as:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.at:
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.au:
    android.app.Notification$Builder b -> a
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.av:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.aw:
    int getIcon() -> a
    java.lang.CharSequence getTitle() -> b
    android.app.PendingIntent getActionIntent() -> c
    android.os.Bundle getExtras() -> d
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> f
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.ax:
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.ay:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> a
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.az:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.ba:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.bb:
    java.lang.Object sExtrasLock -> a
    java.lang.reflect.Field sExtrasField -> b
    boolean sExtrasFieldAccessFailed -> c
    java.lang.Object sActionsLock -> d
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> a
    android.os.Bundle getExtras(android.app.Notification) -> a
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> a
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.bc:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.bd:
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.be:
    android.app.Notification$Builder b -> a
    android.os.Bundle mExtras -> b
    java.util.List mActionExtrasList -> c
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> a
    android.app.Notification$Builder getBuilder() -> a
    android.app.Notification build() -> b
android.support.v4.app.RemoteInput -> android.support.v4.app.bf:
    java.lang.String mResultKey -> b
    java.lang.CharSequence mLabel -> c
    java.lang.CharSequence[] mChoices -> d
    boolean mAllowFreeFormInput -> e
    android.os.Bundle mExtras -> f
    android.support.v4.app.RemoteInput$Impl IMPL -> g
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> a
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.bg:
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.bh:
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.bi:
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.bj:
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.bk:
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.bl:
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.bm:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.bn:
    java.lang.String getResultKey() -> a
    java.lang.CharSequence getLabel() -> b
    java.lang.CharSequence[] getChoices() -> c
    boolean getAllowFreeFormInput() -> d
    android.os.Bundle getExtras() -> e
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.bo:
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.bp:
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> a
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.bq:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.content.LocalBroadcastManager -> android.support.v4.a.c:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void unregisterReceiver(android.content.BroadcastReceiver) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.a.d:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.a.e:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.a.f:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.c:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.d:
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.f:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.g:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.h:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.i:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.j:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.k:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.l:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.m:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.n:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.o:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.p:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.q:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.r:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.w:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.x:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.y:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.z:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.aa:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ab:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.ac:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ad:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ae:
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.af:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ag:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ah:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ai:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.aj:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ak:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.al:
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.am:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.an:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ao:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ap:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aq:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ar:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.as:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.at:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.au:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.av:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aw:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ax:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ay:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.az:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ba:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bb:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bc:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bd:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> b
    int mMinDrawerMargin -> c
    int mScrimColor -> d
    float mScrimOpacity -> e
    android.graphics.Paint mScrimPaint -> f
    android.support.v4.widget.ViewDragHelper mLeftDragger -> g
    android.support.v4.widget.ViewDragHelper mRightDragger -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> i
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> j
    int mDrawerState -> k
    boolean mInLayout -> l
    boolean mFirstLayout -> m
    int mLockModeLeft -> n
    int mLockModeRight -> o
    boolean mDisallowInterceptRequested -> p
    boolean mChildrenCanceledTouch -> q
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    android.graphics.drawable.Drawable mShadowLeft -> u
    android.graphics.drawable.Drawable mShadowRight -> v
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.a:
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.b:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.c:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.d:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.e:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.f:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.j:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.k:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawableLeft -> d
    android.graphics.drawable.Drawable mShadowDrawableRight -> e
    int mOverhangSize -> f
    boolean mCanSlide -> g
    android.view.View mSlideableView -> h
    float mSlideOffset -> i
    float mParallaxOffset -> j
    int mSlideRange -> k
    boolean mIsUnableToDrag -> l
    int mParallaxBy -> m
    float mInitialMotionX -> n
    float mInitialMotionY -> o
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> p
    android.support.v4.widget.ViewDragHelper mDragHelper -> q
    boolean mPreservedOpenState -> r
    boolean mFirstLayout -> s
    android.graphics.Rect mTmpRect -> t
    java.util.ArrayList mPostedRunnables -> u
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> f
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.m:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.n:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.o:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.q:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.r:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.s:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.t:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.v:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.w:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.x:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
antonioplesic.simpleabxtester.AlreadyEncodedDialogFragment -> antonioplesic.simpleabxtester.a:
    antonioplesic.simpleabxtester.AlreadyEncodedDialogFragment$AlreadyEncodedDialogListener mListener -> a
    void onAttach(android.app.Activity) -> onAttach
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
antonioplesic.simpleabxtester.AlreadyEncodedDialogFragment$1 -> antonioplesic.simpleabxtester.b:
    antonioplesic.simpleabxtester.AlreadyEncodedDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
antonioplesic.simpleabxtester.AlreadyEncodedDialogFragment$2 -> antonioplesic.simpleabxtester.c:
    antonioplesic.simpleabxtester.AlreadyEncodedDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
antonioplesic.simpleabxtester.AlreadyEncodedDialogFragment$3 -> antonioplesic.simpleabxtester.d:
    antonioplesic.simpleabxtester.AlreadyEncodedDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
antonioplesic.simpleabxtester.AlreadyEncodedDialogFragment$AlreadyEncodedDialogListener -> antonioplesic.simpleabxtester.e:
    void onAlreadyEncodedDialogNeutralClick(android.app.DialogFragment) -> a
    void onAlreadyEncodedDialogPositiveClick(android.app.DialogFragment) -> b
    void onAlreadyEncodedDialogNegativeClick(android.app.DialogFragment) -> c
antonioplesic.simpleabxtester.BaseActivity -> antonioplesic.simpleabxtester.f:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void launchSettingsActivity() -> a
    void launchHelpActivity() -> b
    void launchAboutActivity() -> c
    boolean checkWav(java.io.File) -> a
    boolean checkFlac(java.io.File) -> b
    boolean checkMp3(java.io.File) -> c
antonioplesic.simpleabxtester.ClickGuard -> antonioplesic.simpleabxtester.g:
    boolean passable -> a
    boolean passed() -> a
    void reset() -> b
antonioplesic.simpleabxtester.DataManager -> antonioplesic.simpleabxtester.h:
    android.content.Context context -> a
    java.lang.String getDefaultDirectoryPath() -> a
    java.lang.String mandatoryDataDirectoryName() -> b
    java.lang.String getStorageDirectoryPath() -> c
    boolean isProcessedForCurrentSettings(java.io.File) -> a
    boolean exists(java.lang.String) -> b
    void toRaw(java.io.File,antonioplesic.simpleabxtester.DataManager$OnToRawProgressUpdateListener) -> a
    void toRaw(java.io.File,java.lang.String,antonioplesic.simpleabxtester.DataManager$OnToRawProgressUpdateListener) -> a
    java.io.File copyFromStream(java.io.InputStream,java.lang.String) -> a
    java.io.File copyFromStream(java.io.InputStream,java.io.File) -> a
    void copyWithProgress(java.io.File,java.io.File,antonioplesic.simpleabxtester.DataManager$OnToRawProgressUpdateListener) -> a
    java.lang.String getSourcePCMPath(java.io.File) -> b
    java.lang.String getMp3Suffix() -> d
    java.lang.String getMp3Path(java.io.File) -> c
    java.lang.String getMp3DecodedPath(java.io.File) -> d
    boolean deleteMp3IfRequired(java.lang.String) -> a
    java.lang.String getSelfPreparedPath1(java.io.File) -> e
    java.lang.String getSelfPreparedPath2(java.io.File) -> f
antonioplesic.simpleabxtester.DataManager$OnToRawProgressUpdateListener -> antonioplesic.simpleabxtester.i:
    void updateProgress(float) -> a
antonioplesic.simpleabxtester.DataManager$StorageUnaccessibleException -> antonioplesic.simpleabxtester.j:
antonioplesic.simpleabxtester.EncodingDialogFragment -> antonioplesic.simpleabxtester.k:
    antonioplesic.simpleabxtester.EncodingDialogFragment$EncodingDialogListener mListener -> a
    void onAttach(android.app.Activity) -> onAttach
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
antonioplesic.simpleabxtester.EncodingDialogFragment$1 -> antonioplesic.simpleabxtester.l:
    antonioplesic.simpleabxtester.EncodingDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
antonioplesic.simpleabxtester.EncodingDialogFragment$2 -> antonioplesic.simpleabxtester.m:
    antonioplesic.simpleabxtester.EncodingDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
antonioplesic.simpleabxtester.EncodingDialogFragment$3 -> antonioplesic.simpleabxtester.n:
    antonioplesic.simpleabxtester.EncodingDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
antonioplesic.simpleabxtester.EncodingDialogFragment$EncodingDialogListener -> antonioplesic.simpleabxtester.o:
    void onEncodingDialogNeutralClick(android.app.DialogFragment) -> d
    void onEncodingDialogPositiveClick(android.app.DialogFragment) -> e
antonioplesic.simpleabxtester.HelpActivity -> antonioplesic.simpleabxtester.HelpActivity:
    android.webkit.WebView webView -> a
    int preciseScrollPosition -> b
    int heightWhenLandscape -> c
    int heightWhenPortrait -> d
    float ratio -> e
    float scrollPercentage -> f
    boolean hasToRestoreState -> g
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void inferHeights() -> d
    boolean isLandscape() -> a
    boolean isPortrait() -> b
    float scrollPercentage() -> c
    void access$0(antonioplesic.simpleabxtester.HelpActivity) -> a
antonioplesic.simpleabxtester.HelpActivity$1 -> antonioplesic.simpleabxtester.p:
    antonioplesic.simpleabxtester.HelpActivity this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
antonioplesic.simpleabxtester.HelpActivity$2 -> antonioplesic.simpleabxtester.q:
    antonioplesic.simpleabxtester.HelpActivity this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    antonioplesic.simpleabxtester.HelpActivity access$0(antonioplesic.simpleabxtester.HelpActivity$2) -> a
antonioplesic.simpleabxtester.HelpActivity$2$1 -> antonioplesic.simpleabxtester.r:
    antonioplesic.simpleabxtester.HelpActivity$2 this$1 -> a
    android.webkit.WebView val$finalWebView -> b
    void run() -> run
antonioplesic.simpleabxtester.LayoutTestingActivity -> antonioplesic.simpleabxtester.LayoutTestingActivity:
    antonioplesic.simpleabxtester.player.TrackSelectorFragment selectorFragment -> a
    android.widget.TextView resultsTextView -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    boolean pressedA() -> a_
    boolean pressedB() -> b_
    boolean pressedX() -> c_
    boolean pressedY() -> d
    boolean pressedOK(boolean,boolean,boolean,boolean) -> a
antonioplesic.simpleabxtester.R -> antonioplesic.simpleabxtester.s:
antonioplesic.simpleabxtester.R$styleable -> antonioplesic.simpleabxtester.t:
    int[] RangeSeekBar -> RangeSeekBar
    int RangeSeekBar_absoluteMaxValue -> RangeSeekBar_absoluteMaxValue
    int RangeSeekBar_absoluteMinValue -> RangeSeekBar_absoluteMinValue
    int RangeSeekBar_singleThumb -> RangeSeekBar_singleThumb
antonioplesic.simpleabxtester.SelfPreparedSourcesActivity -> antonioplesic.simpleabxtester.SelfPreparedSourcesActivity:
    java.io.File fajl1 -> a
    java.io.File fajl2 -> b
    int selectedTrack -> c
    android.widget.TextView track1TextView -> d
    android.widget.TextView track2TextView -> e
    antonioplesic.simpleabxtester.ClickGuard clickGuard -> f
    android.widget.CheckBox syncCheckBox -> g
    android.widget.Button okButton -> h
    android.widget.RadioGroup radioGroup -> i
    antonioplesic.simpleabxtester.DataManager dataManager -> j
    void onCreate(android.os.Bundle) -> onCreate
    void showFilesNotSelectedToast() -> g
    void onResume() -> onResume
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void launchMyPicker() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean testFileSupported(java.io.File) -> d
    void showDataFolderInaccessibleMessage() -> h
    void launchPreparationServiceForSelfPrepared() -> i
    void onJobCompletion() -> e
    void launchABXYTesterActivity() -> f
    void access$0(antonioplesic.simpleabxtester.SelfPreparedSourcesActivity) -> a
    void access$1(antonioplesic.simpleabxtester.SelfPreparedSourcesActivity) -> b
antonioplesic.simpleabxtester.SelfPreparedSourcesActivity$1 -> antonioplesic.simpleabxtester.u:
    antonioplesic.simpleabxtester.SelfPreparedSourcesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
antonioplesic.simpleabxtester.SelfPreparedSourcesActivity$2 -> antonioplesic.simpleabxtester.v:
    antonioplesic.simpleabxtester.SelfPreparedSourcesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
antonioplesic.simpleabxtester.SelfPreparedSourcesActivity$3 -> antonioplesic.simpleabxtester.w:
    antonioplesic.simpleabxtester.SelfPreparedSourcesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
antonioplesic.simpleabxtester.StartScreenActivity -> antonioplesic.simpleabxtester.StartScreenActivity:
    android.widget.Button newABXYTestButton -> a
    android.widget.Button newABXTestButton -> b
    android.widget.Button encoderSettingsButton -> c
    android.widget.Button newSelfPreparedTestButton -> d
    antonioplesic.simpleabxtester.ClickGuard clickGuard -> e
    android.widget.Button debugButton -> f
    android.widget.Button debugButtonAnother -> g
    android.widget.Button yetAnotherDebugButton -> h
    java.io.File fajl -> i
    int selectedMultiStageAction -> j
    antonioplesic.simpleabxtester.DataManager dataManager -> k
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onStart() -> onStart
    void onResume() -> onResume
    void onStop() -> onStop
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void launchMyPicker() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean testFileSupported(java.io.File) -> d
    void launchOneOfTheTests(java.io.File) -> e
    void launcEncodingDialogs(java.io.File) -> f
    void launchSettingsActivityFromDialog() -> f
    void launchABXYTesterActivity() -> g
    void launchABXTesterActivity() -> l
    void showDataFolderInaccessibleMessage() -> m
    void chooseAndLaunchTester() -> h
    void launchSelfPreparedFilesTestActivity() -> i
    void onEncodingDialogNeutralClick(android.app.DialogFragment) -> d
    void onAlreadyEncodedDialogNeutralClick(android.app.DialogFragment) -> a
    void onEncodingDialogPositiveClick(android.app.DialogFragment) -> e
    void onAlreadyEncodedDialogPositiveClick(android.app.DialogFragment) -> b
    void launchPreparationServiceForNormal() -> n
    void onJobCompletion() -> e
    void onAlreadyEncodedDialogNegativeClick(android.app.DialogFragment) -> c
    void stopEncodingService() -> j
    void debug2() -> o
    void internalFiles() -> k
    void launchLayoutTesterActivity() -> p
    void access$0(antonioplesic.simpleabxtester.StartScreenActivity) -> a
    void access$1(antonioplesic.simpleabxtester.StartScreenActivity) -> b
antonioplesic.simpleabxtester.StartScreenActivity$1 -> antonioplesic.simpleabxtester.x:
    antonioplesic.simpleabxtester.StartScreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
antonioplesic.simpleabxtester.StartScreenActivity$2 -> antonioplesic.simpleabxtester.y:
    antonioplesic.simpleabxtester.StartScreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
antonioplesic.simpleabxtester.StartScreenActivity$3 -> antonioplesic.simpleabxtester.z:
    antonioplesic.simpleabxtester.StartScreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
antonioplesic.simpleabxtester.StartScreenActivity$4 -> antonioplesic.simpleabxtester.aa:
    antonioplesic.simpleabxtester.StartScreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
antonioplesic.simpleabxtester.StartScreenActivity$5 -> antonioplesic.simpleabxtester.ab:
    antonioplesic.simpleabxtester.StartScreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
antonioplesic.simpleabxtester.StartScreenActivity$6 -> antonioplesic.simpleabxtester.ac:
    antonioplesic.simpleabxtester.StartScreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
antonioplesic.simpleabxtester.StartScreenActivity$7 -> antonioplesic.simpleabxtester.ad:
    antonioplesic.simpleabxtester.StartScreenActivity this$0 -> a
    void onClick(android.view.View) -> onClick
antonioplesic.simpleabxtester.audiotrackplayer.AudioTrkPlyr -> antonioplesic.simpleabxtester.a.a:
    java.lang.Object lock -> a
    double bytesPerSecond -> b
    java.util.concurrent.atomic.AtomicBoolean pausedFlag -> c
    java.util.concurrent.atomic.AtomicBoolean loopingFlag -> d
    java.util.concurrent.atomic.AtomicBoolean loopingSectionFlag -> e
    java.util.concurrent.atomic.AtomicBoolean seekOnSectionEnd -> f
    int loopStartMilis -> g
    int loopEndMilis -> h
    long loopStartByte -> i
    long loopEndByte -> j
    int bufferSizeInBytes -> k
    java.lang.String filePath1 -> l
    java.lang.String filePath2 -> m
    long file1Length -> n
    long file2Length -> o
    long fileLength -> p
    java.util.concurrent.atomic.AtomicInteger bytesReadSoFar -> q
    java.util.concurrent.atomic.AtomicInteger selectedTrack -> r
    java.io.BufferedInputStream bufferedInputStream1 -> s
    java.io.BufferedInputStream bufferedInputStream2 -> t
    antonioplesic.simpleabxtester.audiotrackplayer.AudioTrkPlyr$OnCompletionListener completionListener -> u
    int getCurrentPosition() -> a
    int getDuration() -> b
    void play() -> c
    void pause() -> d
    void stop() -> e
    void seekTo(int) -> a
    boolean isPlaying() -> f
    void selectTrack(int) -> b
    void setDataSources(java.lang.String,java.lang.String) -> a
    void prepare() -> g
    void setLooping(boolean) -> a
    boolean isLooping() -> h
    void setLoopingSectionStart(int) -> c
    void setLoopingSectionEnd(int) -> d
    void setOnCompletionListener(antonioplesic.simpleabxtester.audiotrackplayer.AudioTrkPlyr$OnCompletionListener) -> a
antonioplesic.simpleabxtester.audiotrackplayer.AudioTrkPlyr$OnCompletionListener -> antonioplesic.simpleabxtester.a.b:
    void onCompletion(antonioplesic.simpleabxtester.audiotrackplayer.AudioTrkPlyr) -> a
antonioplesic.simpleabxtester.audiotrackplayer.SelectablePlayer -> antonioplesic.simpleabxtester.a.c:
    antonioplesic.simpleabxtester.audiotrackplayer.SelectablePlayer thisPlayer -> v
    android.media.AudioTrack audioTrack -> w
    java.util.concurrent.atomic.AtomicBoolean stop -> x
    int WTF -> A
    java.lang.Thread thread -> y
    java.util.concurrent.atomic.AtomicInteger bytesPosition1 -> z
    java.lang.Runnable myRunnable -> B
    void play() -> c
    void prepare() -> g
    void seekTo(int) -> a
    int getCurrentPosition() -> a
    int getDuration() -> b
    void pause() -> d
    void stop() -> e
    int bytePositionToMilis(long) -> a
    int access$0() -> i
antonioplesic.simpleabxtester.audiotrackplayer.SelectablePlayer$1 -> antonioplesic.simpleabxtester.a.d:
    antonioplesic.simpleabxtester.audiotrackplayer.SelectablePlayer this$0 -> a
    void run() -> run
antonioplesic.simpleabxtester.dummytester.DummyABXYTester -> antonioplesic.simpleabxtester.dummytester.DummyABXYTester:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
antonioplesic.simpleabxtester.encoder.EncoderService -> antonioplesic.simpleabxtester.encoder.EncoderService:
    android.support.v4.app.NotificationCompat$Builder builder -> a
    android.app.NotificationManager notificationManager -> b
    android.os.PowerManager$WakeLock wakeLock -> c
    boolean runningFlag -> d
    antonioplesic.simpleabxtester.DataManager dataManager -> e
    int lastProg -> f
    java.util.concurrent.atomic.AtomicBoolean stop -> g
    android.os.IBinder mBinder -> h
    void onCreate() -> onCreate
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void originalStuff(android.content.Intent,long) -> a
    void selfPrepared(android.content.Intent,long) -> b
    void decodeSelfPrepared(java.io.File,java.lang.String) -> a
    long syncTracks(java.lang.String,java.lang.String) -> a
    void mp3ToRaw(java.lang.String,java.lang.String) -> b
    void rawToMp3(java.lang.String,java.lang.String) -> c
    void flacToRaw(java.io.File,java.lang.String) -> b
    void wavToRaw(java.io.File,java.lang.String) -> c
    void rawToRaw(java.io.File) -> a
    void rawToRaw(java.io.File,java.lang.String) -> d
    void onJobCompletion(long) -> a
    void onDestroy() -> onDestroy
    void endStuff() -> b
    void notifyOfCompletion() -> c
    void notifyOfCancel() -> d
    void notifyOfStarted() -> e
    void broadcastToRawProgress(float) -> a
    void broadcastSynchronizationProgress(float) -> b
    void setJobStatus(int) -> a
    void resetServiceFlags(android.content.Context) -> a
    int getJobStatus(android.content.Context) -> b
    android.app.PendingIntent intentForGettingBackToActivity() -> f
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean isRunning() -> a
    void access$0(antonioplesic.simpleabxtester.encoder.EncoderService,float) -> a
    void access$3(antonioplesic.simpleabxtester.encoder.EncoderService,float) -> b
antonioplesic.simpleabxtester.encoder.EncoderService$1 -> antonioplesic.simpleabxtester.encoder.a:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
    void progressUpdate(float) -> a
antonioplesic.simpleabxtester.encoder.EncoderService$10 -> antonioplesic.simpleabxtester.encoder.b:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
    boolean stopExecution() -> a
antonioplesic.simpleabxtester.encoder.EncoderService$11 -> antonioplesic.simpleabxtester.encoder.c:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
    void updateProgress(float) -> a
antonioplesic.simpleabxtester.encoder.EncoderService$12 -> antonioplesic.simpleabxtester.encoder.d:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
    void updateProgress(float) -> a
antonioplesic.simpleabxtester.encoder.EncoderService$2 -> antonioplesic.simpleabxtester.encoder.e:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
    boolean stopExecution() -> a
antonioplesic.simpleabxtester.encoder.EncoderService$3 -> antonioplesic.simpleabxtester.encoder.f:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
antonioplesic.simpleabxtester.encoder.EncoderService$4 -> antonioplesic.simpleabxtester.encoder.g:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
antonioplesic.simpleabxtester.encoder.EncoderService$5 -> antonioplesic.simpleabxtester.encoder.h:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
antonioplesic.simpleabxtester.encoder.EncoderService$6 -> antonioplesic.simpleabxtester.encoder.i:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
antonioplesic.simpleabxtester.encoder.EncoderService$7 -> antonioplesic.simpleabxtester.encoder.j:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
antonioplesic.simpleabxtester.encoder.EncoderService$8 -> antonioplesic.simpleabxtester.encoder.k:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
antonioplesic.simpleabxtester.encoder.EncoderService$9 -> antonioplesic.simpleabxtester.encoder.l:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
    void updateProgress(float) -> a
antonioplesic.simpleabxtester.encoder.EncoderService$LocalBinder -> antonioplesic.simpleabxtester.encoder.m:
    antonioplesic.simpleabxtester.encoder.EncoderService this$0 -> a
    antonioplesic.simpleabxtester.encoder.EncoderService getService() -> a
antonioplesic.simpleabxtester.encoder.FlacInfo -> antonioplesic.simpleabxtester.encoder.n:
    int sample_rate -> a
    int bps -> b
    int channels -> c
    int getSampleRate() -> a
    int getBps() -> b
    int getChannels() -> c
antonioplesic.simpleabxtester.encoder.Mp3Info -> antonioplesic.simpleabxtester.encoder.o:
    int sample_rate -> a
    int getSampleRate() -> a
antonioplesic.simpleabxtester.encoder.ProgressFragment -> antonioplesic.simpleabxtester.encoder.p:
    android.app.ProgressDialog progressDialog -> a
    android.content.BroadcastReceiver receiver -> b
    antonioplesic.simpleabxtester.encoder.ProgressFragment$OnJobCompletionListener jobCompletionListener -> c
    int progresDialogProgress -> d
    java.lang.String progresDialogMessage -> e
    antonioplesic.simpleabxtester.encoder.EncoderService mService -> f
    android.content.ServiceConnection mConnection -> g
    void onAttach(android.app.Activity) -> onAttach
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void showProgressDialog() -> c
    void stopEncodingService() -> a
    void onStart() -> onStart
    void onResume() -> onResume
    void dismissNotifications() -> d
    void onStop() -> onStop
    void onCreate(android.os.Bundle) -> onCreate
    void forceDialogShowing() -> b
    void access$0(antonioplesic.simpleabxtester.encoder.ProgressFragment) -> a
    void access$1(antonioplesic.simpleabxtester.encoder.ProgressFragment) -> b
antonioplesic.simpleabxtester.encoder.ProgressFragment$1 -> antonioplesic.simpleabxtester.encoder.q:
    antonioplesic.simpleabxtester.encoder.ProgressFragment this$0 -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
antonioplesic.simpleabxtester.encoder.ProgressFragment$2 -> antonioplesic.simpleabxtester.encoder.r:
    antonioplesic.simpleabxtester.encoder.ProgressFragment this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
antonioplesic.simpleabxtester.encoder.ProgressFragment$3 -> antonioplesic.simpleabxtester.encoder.s:
    antonioplesic.simpleabxtester.encoder.ProgressFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void updateProgressDialog() -> a
antonioplesic.simpleabxtester.encoder.ProgressFragment$OnJobCompletionListener -> antonioplesic.simpleabxtester.encoder.t:
    void onJobCompletion() -> e
antonioplesic.simpleabxtester.encoder.TracksSynchronizer -> antonioplesic.simpleabxtester.encoder.u:
    int nChannels -> a
    int sampleSize -> b
    char[] left1 -> c
    char[] left2 -> d
    int[] globalDifferenceSignal -> e
    int globalLength -> f
    void loadSamples(java.lang.String,java.lang.String,long,long) -> a
    char[] separateChannel(long,byte[]) -> a
    int getSynchronizationOffset2(int,antonioplesic.simpleabxtester.encoder.TracksSynchronizer$onSyncronizationProgressUpdateListener,antonioplesic.simpleabxtester.encoder.TracksSynchronizer$StopExectutionCallback) -> a
    double signalStrength(int[],int) -> a
    void calculateDifferenceSignal(char[],int,char[],int) -> a
    int swapEndianess16(char) -> a
    int sampleValue(char,boolean) -> a
    void trimmStart(java.lang.String,int) -> a
antonioplesic.simpleabxtester.encoder.TracksSynchronizer$StopExectutionCallback -> antonioplesic.simpleabxtester.encoder.v:
    boolean stopExecution() -> a
antonioplesic.simpleabxtester.encoder.TracksSynchronizer$onSyncronizationProgressUpdateListener -> antonioplesic.simpleabxtester.encoder.w:
    void progressUpdate(float) -> a
antonioplesic.simpleabxtester.encoder.flacDecoder -> antonioplesic.simpleabxtester.encoder.flacDecoder:
    antonioplesic.simpleabxtester.encoder.FlacInfo getMetadata(java.lang.String) -> getMetadata
    void decodeFile(java.lang.String,java.lang.String,antonioplesic.simpleabxtester.encoder.flacDecoder$OnDecoderProgressUpdateListener,antonioplesic.simpleabxtester.encoder.flacDecoder$StopExectutionCallback) -> decodeFile
    void decodeFLAC(java.lang.String,java.lang.String,antonioplesic.simpleabxtester.encoder.flacDecoder$OnDecoderProgressUpdateListener,antonioplesic.simpleabxtester.encoder.flacDecoder$StopExectutionCallback) -> a
antonioplesic.simpleabxtester.encoder.flacDecoder$OnDecoderProgressUpdateListener -> antonioplesic.simpleabxtester.encoder.x:
antonioplesic.simpleabxtester.encoder.flacDecoder$StopExectutionCallback -> antonioplesic.simpleabxtester.encoder.y:
antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder -> antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder:
    java.lang.String getStr(int) -> a
    java.lang.String getBitrateDescription(int) -> b
    void initEncoderCBR(int,int,int,int,int,int) -> initEncoderCBR
    void initEncoderPreset(int,int,int,int) -> initEncoderPreset
    antonioplesic.simpleabxtester.encoder.Mp3Info getInfo(java.lang.String) -> getInfo
    void initDecoder() -> initDecoder
    void destroyEncoder() -> destroyEncoder
    void destroyDecoder() -> destroyDecoder
    void encodeFile(java.lang.String,java.lang.String,antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder$OnEncoderProgressUpdateListener,antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder$StopExectutionCallback) -> encodeFile
    void decodeFile(java.lang.String,java.lang.String,antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder$OnDecodeProgressUpdateListener,antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder$StopExectutionCallback) -> decodeFile
    void selfContainedEncodeFile(android.content.Context,java.lang.String,java.lang.String,antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder$OnEncoderProgressUpdateListener,antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder$StopExectutionCallback) -> a
    void selfContainedDecodeFile(java.lang.String,java.lang.String,antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder$OnDecodeProgressUpdateListener,antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder$StopExectutionCallback) -> a
antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder$OnDecodeProgressUpdateListener -> antonioplesic.simpleabxtester.encoder.z:
antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder$OnEncoderProgressUpdateListener -> antonioplesic.simpleabxtester.encoder.aa:
antonioplesic.simpleabxtester.encoder.mp3EncoderDecoder$StopExectutionCallback -> antonioplesic.simpleabxtester.encoder.ab:
antonioplesic.simpleabxtester.filepicker.CreateDirectoryDialog -> antonioplesic.simpleabxtester.filepicker.a:
    android.widget.EditText editText -> a
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
antonioplesic.simpleabxtester.filepicker.CreateDirectoryDialog$1 -> antonioplesic.simpleabxtester.filepicker.b:
    antonioplesic.simpleabxtester.filepicker.CreateDirectoryDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
antonioplesic.simpleabxtester.filepicker.CreateDirectoryDialog$2 -> antonioplesic.simpleabxtester.filepicker.c:
    antonioplesic.simpleabxtester.filepicker.CreateDirectoryDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
antonioplesic.simpleabxtester.filepicker.CreateDirectoryDialog$SelectionResultInterface -> antonioplesic.simpleabxtester.filepicker.d:
    void receiveSelectionResult(java.lang.String) -> a
antonioplesic.simpleabxtester.filepicker.FilePickerActivity -> antonioplesic.simpleabxtester.filepicker.FilePickerActivity:
    java.lang.String result -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
antonioplesic.simpleabxtester.filepicker.FilePickerFragment -> antonioplesic.simpleabxtester.filepicker.e:
    java.lang.String currentDirectoryPath -> a
    java.lang.String selectedPathUpToItem -> b
    boolean[] selectedItems -> c
    java.lang.String newDirectoryName -> g
    android.widget.TextView textViewCurrentDirectory -> d
    android.widget.ListView listView -> e
    antonioplesic.simpleabxtester.filepicker.FilePickerFragment$MyAdapter mAdapter -> h
    android.view.ActionMode mActionMode -> f
    android.view.ActionMode$Callback mActionModeCallback -> i
    void loadLastDirectory() -> e
    void onDestroy() -> onDestroy
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    boolean isSomethingSelected() -> f
    boolean contains(boolean[],boolean) -> a
    void showSortDialog() -> g
    void receiveSortSelectionResult(int) -> a
    void showCreteDirectoryDialog() -> h
    void receiveSelectionResult(java.lang.String) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void upOneLevel() -> a
    void dismissActionMode() -> i
    void removeSelection() -> j
    void updateList() -> k
    java.io.File[] getCurrentDirectorContent() -> l
    boolean inRoot() -> m
    void returnResult() -> n
    java.lang.String getSelectedPath() -> o
    int getComparatorType() -> b
    void saveComparatorType(int) -> b
    java.io.File[] getRootDirectories() -> c
    java.util.List getRootDirectoriesList() -> d
    void access$0(antonioplesic.simpleabxtester.filepicker.FilePickerFragment) -> a
    void access$1(antonioplesic.simpleabxtester.filepicker.FilePickerFragment) -> b
    java.io.File[] access$2(antonioplesic.simpleabxtester.filepicker.FilePickerFragment) -> c
    android.view.ActionMode$Callback access$3(antonioplesic.simpleabxtester.filepicker.FilePickerFragment) -> d
    boolean access$4(antonioplesic.simpleabxtester.filepicker.FilePickerFragment) -> e
    boolean access$5(antonioplesic.simpleabxtester.filepicker.FilePickerFragment) -> f
    void access$6(antonioplesic.simpleabxtester.filepicker.FilePickerFragment) -> g
    void access$7(antonioplesic.simpleabxtester.filepicker.FilePickerFragment) -> h
antonioplesic.simpleabxtester.filepicker.FilePickerFragment$1 -> antonioplesic.simpleabxtester.filepicker.f:
    antonioplesic.simpleabxtester.filepicker.FilePickerFragment this$0 -> a
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
antonioplesic.simpleabxtester.filepicker.FilePickerFragment$2 -> antonioplesic.simpleabxtester.filepicker.g:
    antonioplesic.simpleabxtester.filepicker.FilePickerFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
antonioplesic.simpleabxtester.filepicker.FilePickerFragment$3 -> antonioplesic.simpleabxtester.filepicker.h:
    antonioplesic.simpleabxtester.filepicker.FilePickerFragment this$0 -> a
    boolean accept(java.io.File) -> accept
antonioplesic.simpleabxtester.filepicker.FilePickerFragment$ItemViewHolder -> antonioplesic.simpleabxtester.filepicker.i:
    android.widget.CheckBox checkbox -> a
    android.widget.TextView textView -> b
    android.widget.ImageView imageView -> c
antonioplesic.simpleabxtester.filepicker.FilePickerFragment$MyAdapter -> antonioplesic.simpleabxtester.filepicker.j:
    java.io.File[] objects -> b
    antonioplesic.simpleabxtester.filepicker.FilePickerFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    antonioplesic.simpleabxtester.filepicker.FilePickerFragment access$0(antonioplesic.simpleabxtester.filepicker.FilePickerFragment$MyAdapter) -> a
antonioplesic.simpleabxtester.filepicker.FilePickerFragment$MyAdapter$1 -> antonioplesic.simpleabxtester.filepicker.k:
    antonioplesic.simpleabxtester.filepicker.FilePickerFragment$MyAdapter this$1 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
antonioplesic.simpleabxtester.filepicker.MyComparator -> antonioplesic.simpleabxtester.filepicker.l:
    int mode -> a
    int compare(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
antonioplesic.simpleabxtester.filepicker.SortDialog -> antonioplesic.simpleabxtester.filepicker.m:
    int sortType -> a
    android.widget.RadioGroup radioGroup -> b
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
antonioplesic.simpleabxtester.filepicker.SortDialog$1 -> antonioplesic.simpleabxtester.filepicker.n:
    antonioplesic.simpleabxtester.filepicker.SortDialog this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
antonioplesic.simpleabxtester.filepicker.SortDialog$2 -> antonioplesic.simpleabxtester.filepicker.o:
    antonioplesic.simpleabxtester.filepicker.SortDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
antonioplesic.simpleabxtester.filepicker.SortDialog$SortSelectionDialogListener -> antonioplesic.simpleabxtester.filepicker.p:
    void receiveSortSelectionResult(int) -> a
antonioplesic.simpleabxtester.lifted.PixelUtil -> antonioplesic.simpleabxtester.lifted.a:
    int dpToPx(android.content.Context,int) -> a
    float getPixelScaleFactor(android.content.Context) -> a
antonioplesic.simpleabxtester.lifted.RangeSeekBar -> antonioplesic.simpleabxtester.lifted.RangeSeekBar:
    int LINE_HEIGHT_IN_DP -> b
    android.graphics.Paint paint -> c
    android.graphics.Bitmap thumbImage -> d
    android.graphics.Bitmap thumbPressedImage -> e
    android.graphics.Bitmap thumbDisabledImage -> f
    float thumbWidth -> g
    float thumbHalfWidth -> h
    float thumbHalfHeight -> i
    float INITIAL_PADDING -> j
    float padding -> k
    java.lang.Number absoluteMinValue -> l
    java.lang.Number absoluteMaxValue -> m
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType numberType -> n
    double absoluteMinValuePrim -> o
    double absoluteMaxValuePrim -> p
    double normalizedMinValue -> q
    double normalizedMaxValue -> r
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$Thumb pressedThumb -> s
    boolean notifyWhileDragging -> t
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$OnRangeSeekBarChangeListener listener -> u
    int DEFAULT_COLOR -> a
    float mDownMotionX -> v
    int mActivePointerId -> w
    int mScaledTouchSlop -> x
    boolean mIsDragging -> y
    int mTextOffset -> z
    int mTextSize -> A
    int mDistanceToTop -> B
    android.graphics.RectF mRect -> C
    boolean mSingleThumb -> D
    java.lang.Number extractNumericValueFromAttributes(android.content.res.TypedArray,int,int) -> a
    void init(android.content.Context,android.util.AttributeSet) -> a
    void setRangeValues(java.lang.Number,java.lang.Number) -> a
    void setRangeValues(int,int) -> a
    void setValuePrimAndNumberType() -> c
    void setNotifyWhileDragging(boolean) -> setNotifyWhileDragging
    java.lang.Number getAbsoluteMinValue() -> getAbsoluteMinValue
    java.lang.Number getAbsoluteMaxValue() -> getAbsoluteMaxValue
    java.lang.Number getSelectedMinValue() -> getSelectedMinValue
    void setSelectedMinValue(java.lang.Number) -> setSelectedMinValue
    java.lang.Number getSelectedMaxValue() -> getSelectedMaxValue
    void setSelectedMaxValue(java.lang.Number) -> setSelectedMaxValue
    void setOnRangeSeekBarChangeListener(antonioplesic.simpleabxtester.lifted.RangeSeekBar$OnRangeSeekBarChangeListener) -> setOnRangeSeekBarChangeListener
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void trackTouchEvent(android.view.MotionEvent) -> b
    void attemptClaimDrag() -> d
    void onStartTrackingTouch() -> a
    void onStopTrackingTouch() -> b
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void drawThumb(float,boolean,android.graphics.Canvas,boolean) -> a
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$Thumb evalPressedThumb(float) -> a
    boolean isInThumbRange(float,double) -> a
    void setNormalizedMinValue(double) -> setNormalizedMinValue
    void setNormalizedMaxValue(double) -> setNormalizedMaxValue
    java.lang.Number normalizedToValue(double) -> a
    double valueToNormalized(java.lang.Number) -> a
    float normalizedToScreen(double) -> b
    double screenToNormalized(float) -> b
    java.lang.String timeNice(java.lang.Number) -> b
antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType -> antonioplesic.simpleabxtester.lifted.b:
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType LONG -> a
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType DOUBLE -> b
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType INTEGER -> c
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType FLOAT -> d
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType SHORT -> e
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType BYTE -> f
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType BIG_DECIMAL -> g
    int[] $SWITCH_TABLE$antonioplesic$simpleabxtester$lifted$RangeSeekBar$NumberType -> h
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType[] ENUM$VALUES -> i
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType fromNumber(java.lang.Number) -> a
    java.lang.Number toNumber(double) -> a
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType[] values() -> values
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$NumberType valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$antonioplesic$simpleabxtester$lifted$RangeSeekBar$NumberType() -> a
antonioplesic.simpleabxtester.lifted.RangeSeekBar$OnRangeSeekBarChangeListener -> antonioplesic.simpleabxtester.lifted.c:
    void onRangeSeekBarValuesChanged(antonioplesic.simpleabxtester.lifted.RangeSeekBar,java.lang.Object,java.lang.Object) -> a
antonioplesic.simpleabxtester.lifted.RangeSeekBar$Thumb -> antonioplesic.simpleabxtester.lifted.d:
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$Thumb MIN -> a
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$Thumb MAX -> b
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$Thumb[] ENUM$VALUES -> c
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$Thumb[] values() -> values
    antonioplesic.simpleabxtester.lifted.RangeSeekBar$Thumb valueOf(java.lang.String) -> valueOf
antonioplesic.simpleabxtester.lifted.StorageUtils -> antonioplesic.simpleabxtester.lifted.e:
    java.util.List getStorageList() -> a
antonioplesic.simpleabxtester.lifted.StorageUtils$StorageInfo -> antonioplesic.simpleabxtester.lifted.f:
    java.lang.String path -> a
    boolean readonly -> b
    boolean removable -> c
    int number -> d
antonioplesic.simpleabxtester.player.ABXselector -> antonioplesic.simpleabxtester.player.a:
    android.widget.ToggleButton buttonA -> a
    android.widget.ToggleButton buttonB -> b
    android.widget.ToggleButton buttonC -> c
    android.widget.Button buttonOK -> d
    android.widget.TextView descriptionTextView -> e
    android.widget.CheckBox chooseDifferentChkBox -> f
    boolean chooseDifferent -> g
    antonioplesic.simpleabxtester.player.ABXselector$SelectedButton selectedButton -> h
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setDescriptionText() -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onClick(android.view.View) -> onClick
    void setButtonBackgrounds() -> e
    void initialize() -> b
    void notifiyPlaybackStopped() -> c
    void notifiyPlaybacksStarted() -> d
antonioplesic.simpleabxtester.player.ABXselector$1 -> antonioplesic.simpleabxtester.player.b:
    antonioplesic.simpleabxtester.player.ABXselector this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
antonioplesic.simpleabxtester.player.ABXselector$SelectedButton -> antonioplesic.simpleabxtester.player.c:
    antonioplesic.simpleabxtester.player.ABXselector$SelectedButton A -> a
    antonioplesic.simpleabxtester.player.ABXselector$SelectedButton B -> b
    antonioplesic.simpleabxtester.player.ABXselector$SelectedButton C -> c
    antonioplesic.simpleabxtester.player.ABXselector$SelectedButton dummy -> d
    antonioplesic.simpleabxtester.player.ABXselector$SelectedButton none -> e
    antonioplesic.simpleabxtester.player.ABXselector$SelectedButton[] ENUM$VALUES -> f
    antonioplesic.simpleabxtester.player.ABXselector$SelectedButton[] values() -> values
    antonioplesic.simpleabxtester.player.ABXselector$SelectedButton valueOf(java.lang.String) -> valueOf
antonioplesic.simpleabxtester.player.Arbiter -> antonioplesic.simpleabxtester.player.d:
    int type -> a
    int A -> b
    int B -> c
    int X -> d
    int Y -> e
    int testCount -> f
    int correctCount -> g
    int get_A_track() -> a
    int get_B_track() -> b
    int get_X_track() -> c
    int get_Y_track() -> d
    boolean check(boolean,boolean) -> a
    void randomizeTracks() -> e
    int randInt(int,int) -> a
    void onCorrect() -> i
    void onIncorrect() -> j
    int testCount() -> f
    int correctCount() -> g
    double probabilityOfGuessing() -> h
    double probBetter(int,int) -> b
    double binomial(int,int) -> c
antonioplesic.simpleabxtester.player.AudioTrackFragment -> antonioplesic.simpleabxtester.player.e:
    antonioplesic.simpleabxtester.audiotrackplayer.AudioTrkPlyr player -> a
    boolean Aselected -> c
    boolean Bselected -> d
    boolean Xselected -> e
    boolean Yselected -> f
    boolean isPlaying -> b
    antonioplesic.simpleabxtester.player.AudioTrackFragment$PlayerFragmentCallbacks myCallbacks -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void stop() -> a
    void loadAudio(java.lang.String,java.lang.String) -> a
    void play() -> b
    void pause() -> c
    boolean isPlaying() -> d
    boolean isSetToPlay() -> e
    int getDuration() -> f
    int getCurrentPosition() -> g
    void seekTo(int) -> a
    void setLooping(boolean) -> a
    void setLoopingStart(int) -> b
    void setLoopingEnd(int) -> c
    boolean isLooping() -> h
    void solo1() -> i
    void solo2() -> j
    antonioplesic.simpleabxtester.player.AudioTrackFragment$PlayerFragmentCallbacks access$0(antonioplesic.simpleabxtester.player.AudioTrackFragment) -> a
antonioplesic.simpleabxtester.player.AudioTrackFragment$1 -> antonioplesic.simpleabxtester.player.f:
    antonioplesic.simpleabxtester.player.AudioTrackFragment this$0 -> a
    void onCompletion(antonioplesic.simpleabxtester.audiotrackplayer.AudioTrkPlyr) -> a
antonioplesic.simpleabxtester.player.AudioTrackFragment$PlayerFragmentCallbacks -> antonioplesic.simpleabxtester.player.g:
    void onCompletion(antonioplesic.simpleabxtester.audiotrackplayer.AudioTrkPlyr) -> a
antonioplesic.simpleabxtester.player.DraggerFragment -> antonioplesic.simpleabxtester.player.h:
    android.widget.Button buttonA -> a
    android.widget.Button buttonB -> b
    android.widget.Button buttonX -> c
    android.widget.Button buttonY -> d
    android.widget.TextView textViewX -> e
    android.widget.TextView textViewY -> f
    antonioplesic.simpleabxtester.player.DraggerFragment$SelectedButton selectedButton -> g
    boolean isPlaying -> q
    android.widget.Button buttonOK -> h
    android.widget.LinearLayout linearLayout -> i
    android.widget.LinearLayout layoutX -> j
    android.widget.LinearLayout layoutY -> k
    android.widget.LinearLayout layoutAB -> l
    android.widget.FrameLayout dynamicHolderY -> m
    android.widget.FrameLayout dynamicHolderX -> n
    android.widget.FrameLayout startHolderA -> o
    android.widget.FrameLayout startHolderB -> p
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onAttach(android.app.Activity) -> onAttach
    void onStart() -> onStart
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void repopulateLayoutFromSavedInstanceState(android.view.ViewGroup,java.lang.String,android.os.Bundle) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void saveLayoutChildren(android.view.ViewGroup,java.lang.String,android.os.Bundle) -> b
    boolean onDrag(android.view.View,android.view.DragEvent) -> onDrag
    void setGlobalTextViewVisibility() -> a
    void notifiyPlaybackStopped() -> c
    void notifiyPlaybacksStarted() -> d
    void onClick(android.view.View) -> onClick
    void setButtonBackgrounds() -> e
    void initialize() -> b
antonioplesic.simpleabxtester.player.DraggerFragment$SelectedButton -> antonioplesic.simpleabxtester.player.i:
    antonioplesic.simpleabxtester.player.DraggerFragment$SelectedButton A -> a
    antonioplesic.simpleabxtester.player.DraggerFragment$SelectedButton B -> b
    antonioplesic.simpleabxtester.player.DraggerFragment$SelectedButton X -> c
    antonioplesic.simpleabxtester.player.DraggerFragment$SelectedButton Y -> d
    antonioplesic.simpleabxtester.player.DraggerFragment$SelectedButton[] ENUM$VALUES -> e
    antonioplesic.simpleabxtester.player.DraggerFragment$SelectedButton[] values() -> values
    antonioplesic.simpleabxtester.player.DraggerFragment$SelectedButton valueOf(java.lang.String) -> valueOf
antonioplesic.simpleabxtester.player.IButtonPress -> antonioplesic.simpleabxtester.player.j:
    boolean pressedA() -> a_
    boolean pressedB() -> b_
    boolean pressedX() -> c_
    boolean pressedY() -> d
    boolean pressedOK(boolean,boolean,boolean,boolean) -> a
antonioplesic.simpleabxtester.player.MyButton -> antonioplesic.simpleabxtester.player.MyButton:
    float mDownX -> a
    float mDownY -> b
    float SCROLL_THRESHOLD -> c
    boolean isOnClick -> d
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
antonioplesic.simpleabxtester.player.PlayerActivity -> antonioplesic.simpleabxtester.player.PlayerActivity:
    android.os.Handler GUIHandler -> i
    antonioplesic.simpleabxtester.player.AudioTrackFragment playerFragment -> j
    antonioplesic.simpleabxtester.player.TrackSelectorFragment selectorFragment -> k
    int selectorType -> l
    antonioplesic.simpleabxtester.player.Arbiter arbiter -> a
    android.widget.SeekBar seekBar -> b
    antonioplesic.simpleabxtester.lifted.RangeSeekBar rangeSeekBar -> c
    android.widget.ImageButton btnPlayPause -> d
    android.widget.CheckBox cbxLoop -> e
    int rangeStart -> f
    android.widget.TextView resultsTextView -> g
    java.lang.Runnable seekBarUpdater -> h
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setViewTexts() -> f
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void playPause() -> g
    void onCompletion(antonioplesic.simpleabxtester.audiotrackplayer.AudioTrkPlyr) -> a
    void stopUpdation() -> h
    void onResume() -> onResume
    void onStop() -> onStop
    void seekUpdation() -> e
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    boolean pressedA() -> a_
    boolean pressedB() -> b_
    boolean pressedX() -> c_
    boolean pressedY() -> d
    boolean pressedOK(boolean,boolean,boolean,boolean) -> a
    void access$0(antonioplesic.simpleabxtester.player.PlayerActivity) -> a
    antonioplesic.simpleabxtester.player.AudioTrackFragment access$1(antonioplesic.simpleabxtester.player.PlayerActivity) -> b
    antonioplesic.simpleabxtester.player.TrackSelectorFragment access$2(antonioplesic.simpleabxtester.player.PlayerActivity) -> c
    void access$3(antonioplesic.simpleabxtester.player.PlayerActivity) -> d
antonioplesic.simpleabxtester.player.PlayerActivity$1 -> antonioplesic.simpleabxtester.player.k:
    antonioplesic.simpleabxtester.player.PlayerActivity this$0 -> a
    void run() -> run
antonioplesic.simpleabxtester.player.PlayerActivity$2 -> antonioplesic.simpleabxtester.player.l:
    antonioplesic.simpleabxtester.player.PlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
antonioplesic.simpleabxtester.player.PlayerActivity$3 -> antonioplesic.simpleabxtester.player.m:
    antonioplesic.simpleabxtester.player.PlayerActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
antonioplesic.simpleabxtester.player.PlayerActivity$4 -> antonioplesic.simpleabxtester.player.n:
    antonioplesic.simpleabxtester.player.PlayerActivity this$0 -> a
    void onRangeSeekBarValuesChanged(antonioplesic.simpleabxtester.lifted.RangeSeekBar,java.lang.Integer,java.lang.Integer) -> a
    void onRangeSeekBarValuesChanged(antonioplesic.simpleabxtester.lifted.RangeSeekBar,java.lang.Object,java.lang.Object) -> a
antonioplesic.simpleabxtester.player.PlayerActivity$5 -> antonioplesic.simpleabxtester.player.o:
    antonioplesic.simpleabxtester.player.PlayerActivity this$0 -> a
    void run() -> run
antonioplesic.simpleabxtester.player.TrackSelectorFragment -> antonioplesic.simpleabxtester.player.p:
    void notifiyPlaybacksStarted() -> d
    void notifiyPlaybackStopped() -> c
    void initialize() -> b
antonioplesic.simpleabxtester.settings.PreferenceWithLongSummary -> antonioplesic.simpleabxtester.settings.PreferenceWithLongSummary:
    void onBindView(android.view.View) -> onBindView
antonioplesic.simpleabxtester.settings.SeekbarPreference -> antonioplesic.simpleabxtester.settings.SeekbarPreference:
    int value -> a
    android.widget.TextView textView -> b
    android.widget.SeekBar seekBar -> c
    android.preference.Preference$OnPreferenceChangeListener listener -> d
    android.view.View onCreateView(android.view.ViewGroup) -> onCreateView
    int getValue() -> a
    int toMilis(int,double) -> a
    boolean access$0(antonioplesic.simpleabxtester.settings.SeekbarPreference,int) -> a
    boolean access$1(antonioplesic.simpleabxtester.settings.SeekbarPreference,java.lang.Object) -> a
antonioplesic.simpleabxtester.settings.SeekbarPreference$1 -> antonioplesic.simpleabxtester.settings.a:
    antonioplesic.simpleabxtester.settings.SeekbarPreference this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
antonioplesic.simpleabxtester.settings.SettingsActivity -> antonioplesic.simpleabxtester.settings.SettingsActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
antonioplesic.simpleabxtester.settings.SettingsFragment -> antonioplesic.simpleabxtester.settings.b:
    antonioplesic.simpleabxtester.settings.SettingsHelper helper -> a
    void onCreate(android.os.Bundle) -> onCreate
    void addOkButton() -> e
    void addEnkoderPreferences() -> a
    void addDataPreferences() -> b
    void addSyncPreferences() -> c
    void launchMyPicker() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
antonioplesic.simpleabxtester.settings.SettingsFragment$1 -> antonioplesic.simpleabxtester.settings.c:
    antonioplesic.simpleabxtester.settings.SettingsFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
antonioplesic.simpleabxtester.settings.SettingsFragment$2 -> antonioplesic.simpleabxtester.settings.d:
    antonioplesic.simpleabxtester.settings.SettingsFragment this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
antonioplesic.simpleabxtester.settings.SettingsFragment$3 -> antonioplesic.simpleabxtester.settings.e:
    antonioplesic.simpleabxtester.settings.SettingsFragment this$0 -> a
    android.preference.PreferenceScreen val$qualityOuter -> b
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
antonioplesic.simpleabxtester.settings.SettingsFragment$4 -> antonioplesic.simpleabxtester.settings.f:
    antonioplesic.simpleabxtester.settings.SettingsFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
antonioplesic.simpleabxtester.settings.SettingsFragment$5 -> antonioplesic.simpleabxtester.settings.g:
    antonioplesic.simpleabxtester.settings.SettingsFragment this$0 -> a
    android.preference.PreferenceScreen val$outer -> b
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
antonioplesic.simpleabxtester.settings.SettingsHelper -> antonioplesic.simpleabxtester.settings.h:
    android.content.Context context -> a
    android.content.SharedPreferences sharedPref -> b
    int getBitrate(int) -> a
    int getQuality(int) -> b
    boolean usesCustomDirectory() -> a
    java.lang.String getCustomDirectory() -> b
    void setCustomDirectory(java.lang.String) -> a
    java.lang.String getActualCustomDirectory() -> c
    int getSyncWindowLength() -> d
antonioplesic.simpleabxtester.wavextractor.WavInfoBetter -> antonioplesic.simpleabxtester.b.a:
    long dataLength -> a
    long dataStart -> b
    int format -> c
    int nChannels -> d
    int sampleRate -> e
    int bitsPerSample -> f
    java.lang.String getFormatString(int) -> a
    int getFormat() -> a
    int getnChannels() -> b
    int getSampleRate() -> c
    int getBitsPerSample() -> d
antonioplesic.simpleabxtester.wavextractor.WavParserBetter -> antonioplesic.simpleabxtester.b.b:
    boolean formatFound -> a
    boolean dataFound -> b
    long dataStartChunkIdAt -> c
    long dataLength -> d
    long dataStart -> e
    int paddingByte -> f
    int format -> g
    int nChannels -> h
    int sampleRate -> i
    int bitsPerSample -> j
    byte[] RIFF -> k
    byte[] WAVE -> l
    byte[] FMT -> m
    byte[] DATA -> n
    byte[] FACT -> o
    java.io.FileInputStream in -> p
    byte[] buffer -> q
    antonioplesic.simpleabxtester.wavextractor.WavInfoBetter parse() -> a
    void readRiffChunk() -> b
    void readUnknownChunk() -> c
    void readDataChunk() -> d
    void readFormatChunk() -> e
    long littleEndianToInt(byte[]) -> a
    int firstTwoLittleEndianToInt(byte[]) -> b
    int lastTwoLittleEndianToInt(byte[]) -> c
    void extractRawDataFromWav(java.lang.String,java.lang.String,antonioplesic.simpleabxtester.wavextractor.WavParserBetter$OnWavToRawExtractionProgressUpdateListener,antonioplesic.simpleabxtester.wavextractor.WavParserBetter$StopExectutionCallback) -> a
    void copyFilePart(java.lang.String,java.lang.String,long,long,antonioplesic.simpleabxtester.wavextractor.WavParserBetter$OnWavToRawExtractionProgressUpdateListener,antonioplesic.simpleabxtester.wavextractor.WavParserBetter$StopExectutionCallback) -> a
antonioplesic.simpleabxtester.wavextractor.WavParserBetter$OnWavToRawExtractionProgressUpdateListener -> antonioplesic.simpleabxtester.b.c:
    void updateProgress(float) -> a
antonioplesic.simpleabxtester.wavextractor.WavParserBetter$StopExectutionCallback -> antonioplesic.simpleabxtester.b.d:
    boolean stopExecution() -> a
